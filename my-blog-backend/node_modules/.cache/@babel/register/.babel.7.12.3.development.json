{
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\React\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\React\\\\my-blog-backend\",\"filename\":\"E:\\\\Software Development\\\\React\\\\my-blog-backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\React\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\React\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\React\\my-blog-backend",
      "filename": "E:\\Software Development\\React\\my-blog-backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\React\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\React\\my-blog-backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\React\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\React\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\n\nvar cors = require('cors');\n\napp.use(cors());\n\nrequire('dotenv').config({\n  path: 'src/.env'\n});\n\nvar port = process.env.PORT;\napp.listen(port, function () {\n  console.log(\"Listening on port \".concat(port));\n});\nvar CONNECTION_URL = 'mongodb://localhost:27017';\nvar DATABASE_NAME = \"tweetdb\";\nvar database, collection;\n\nvar Twit = require('twit');\n\nvar client = new Twit({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\nvar stream = client.stream('statuses/filter', {\n  track: 'facial recognition'\n});\nstream.on('tweet', function (tweet) {\n  console.log(tweet.user.name);\n  console.log(tweet.user.screen_name);\n  console.log(tweet.user.location);\n  console.log(tweet.created_at);\n  console.log(tweet.user.profile_image_url);\n  console.log(tweet.text);\n  console.log(\"----------------------------\");\n\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db(DATABASE_NAME);\n    collection = database.collection(\"tweets\");\n    console.log(\"Connected to database: \" + DATABASE_NAME);\n    var tweetObject = {\n      id: tweet.id,\n      name: tweet.user.name,\n      screenName: tweet.user.screen_name,\n      location: tweet.user.location,\n      profileImg: tweet.user.profile_image_url,\n      text: tweet.text,\n      createdAt: tweet.created_at,\n      reply: tweet.reply_count,\n      retweet: tweet.retweet_count\n    };\n    collection.insertOne(tweetObject, function (err, res) {\n      if (err) throw err;\n      console.log(\"Record inserted\");\n    });\n  });\n});\napp.get(\"/articles\", function (req, res) {\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db(DATABASE_NAME);\n    collection = database.collection(\"tweets\");\n    console.log(\"Connected to database: \" + DATABASE_NAME);\n    collection.find({}).toArray(function (error, result) {\n      if (error) {\n        return res.status(500).send(error);\n      }\n\n      res.send(result);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "cors",
        "require",
        "config",
        "path",
        "port",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log",
        "CONNECTION_URL",
        "DATABASE_NAME",
        "database",
        "collection",
        "Twit",
        "client",
        "consumer_key",
        "TWITTER_CONSUMER_KEY",
        "consumer_secret",
        "TWITTER_CONSUMER_SECRET",
        "access_token",
        "TWITTER_ACCESS_TOKEN_KEY",
        "access_token_secret",
        "TWITTER_ACCESS_TOKEN_SECRET",
        "stream",
        "track",
        "on",
        "tweet",
        "user",
        "name",
        "screen_name",
        "location",
        "created_at",
        "profile_image_url",
        "text",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "error",
        "db",
        "tweetObject",
        "id",
        "screenName",
        "profileImg",
        "createdAt",
        "reply",
        "reply_count",
        "retweet",
        "retweet_count",
        "insertOne",
        "err",
        "res",
        "get",
        "req",
        "find",
        "toArray",
        "result",
        "status",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\React\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\nconst cors = require('cors');\r\napp.use(cors());\r\n\r\nrequire('dotenv').config({ path: 'src/.env' });\r\n\r\nconst port = process.env.PORT;\r\n\r\napp.listen(port, () => {\r\n    console.log(`Listening on port ${port}`)\r\n});\r\n\r\nconst CONNECTION_URL = 'mongodb://localhost:27017';\r\nconst DATABASE_NAME = \"tweetdb\";\r\nvar database, collection;\r\n\r\nconst Twit = require('twit');\r\nvar client = new Twit({\r\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\r\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\r\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\r\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\r\n});\r\n\r\nvar stream = client.stream('statuses/filter', { track: 'facial recognition' })\r\nstream.on('tweet', function(tweet) {\r\n\r\n    console.log(tweet.user.name);\r\n    console.log(tweet.user.screen_name);\r\n    console.log(tweet.user.location);\r\n    console.log(tweet.created_at);\r\n    console.log(tweet.user.profile_image_url);\r\n    console.log(tweet.text);\r\n    console.log(\"----------------------------\")\r\n\r\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, (error, client) => {\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        database = client.db(DATABASE_NAME);\r\n        collection = database.collection(\"tweets\");\r\n        console.log(\"Connected to database: \" + DATABASE_NAME);\r\n\r\n        var tweetObject = {\r\n            id: tweet.id,\r\n            name: tweet.user.name,\r\n            screenName: tweet.user.screen_name,\r\n            location: tweet.user.location,\r\n            profileImg: tweet.user.profile_image_url,\r\n            text: tweet.text,\r\n            createdAt: tweet.created_at,\r\n            reply: tweet.reply_count,\r\n            retweet: tweet.retweet_count\r\n        };\r\n\r\n        collection.insertOne(tweetObject, function(err, res) {\r\n            if (err) throw err;\r\n            console.log(\"Record inserted\");\r\n        });\r\n    });\r\n})\r\n\r\napp.get(\"/articles\", (req, res) => {\r\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, (error, client) => {\r\n        if (error) {\r\n            throw error;\r\n        }\r\n\r\n        database = client.db(DATABASE_NAME);\r\n        collection = database.collection(\"tweets\");\r\n        console.log(\"Connected to database: \" + DATABASE_NAME);\r\n\r\n        collection.find({}).toArray((error, result) => {\r\n            if (error) {\r\n                return res.status(500).send(error);\r\n            }\r\n            res.send(result);\r\n        });\r\n    });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1607752670723
  },
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\SD744-FinalProject\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\SD744-FinalProject\\\\my-blog-backend\",\"filename\":\"E:\\\\Software Development\\\\SD744-FinalProject\\\\my-blog-backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\SD744-FinalProject\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend",
      "filename": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\n\nvar cors = require('cors');\n\napp.use(cors());\n\nrequire('dotenv').config({\n  path: 'src/.env'\n});\n\nvar port = process.env.PORT;\napp.listen(port, function () {\n  console.log(\"Listening on port \".concat(port));\n});\nvar CONNECTION_URL = 'mongodb://localhost:27017';\nvar DATABASE_NAME = \"tweetdb\";\nvar database, collection;\n\nvar Twit = require('twit');\n\nvar client = new Twit({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\nvar stream = client.stream('statuses/filter', {\n  track: 'facial recognition'\n});\nstream.on('tweet', function (tweet) {\n  console.log(tweet);\n\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db(DATABASE_NAME);\n    collection = database.collection(\"tweets\");\n    console.log(\"Connected to database: \" + DATABASE_NAME);\n    var tweetObject = {\n      id: tweet.id,\n      name: tweet.user.name,\n      screenName: tweet.user.screen_name,\n      location: tweet.user.location,\n      profileImg: tweet.user.profile_image_url,\n      text: tweet.text,\n      createdAt: tweet.created_at,\n      reply: tweet.reply_count,\n      retweet: tweet.retweet_count\n    };\n    collection.insertOne(tweetObject, function (err, res) {\n      if (err) throw err;\n      console.log(\"Record inserted\");\n    });\n  });\n});\napp.get(\"/articles\", function (req, res) {\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db(DATABASE_NAME);\n    collection = database.collection(\"tweets\");\n    console.log(\"Connected to database: \" + DATABASE_NAME);\n    collection.find({}).toArray(function (error, result) {\n      if (error) {\n        return res.status(500).send(error);\n      }\n\n      res.send(result);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "cors",
        "require",
        "config",
        "path",
        "port",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log",
        "CONNECTION_URL",
        "DATABASE_NAME",
        "database",
        "collection",
        "Twit",
        "client",
        "consumer_key",
        "TWITTER_CONSUMER_KEY",
        "consumer_secret",
        "TWITTER_CONSUMER_SECRET",
        "access_token",
        "TWITTER_ACCESS_TOKEN_KEY",
        "access_token_secret",
        "TWITTER_ACCESS_TOKEN_SECRET",
        "stream",
        "track",
        "on",
        "tweet",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "error",
        "db",
        "tweetObject",
        "id",
        "name",
        "user",
        "screenName",
        "screen_name",
        "location",
        "profileImg",
        "profile_image_url",
        "text",
        "createdAt",
        "created_at",
        "reply",
        "reply_count",
        "retweet",
        "retweet_count",
        "insertOne",
        "err",
        "res",
        "get",
        "req",
        "find",
        "toArray",
        "result",
        "status",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\SD744-FinalProject\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\nconst cors = require('cors');\r\napp.use(cors());\r\n\r\nrequire('dotenv').config({ path: 'src/.env' });\r\n\r\nconst port = process.env.PORT;\r\n\r\napp.listen(port, () => {\r\n    console.log(`Listening on port ${port}`)\r\n});\r\n\r\nconst CONNECTION_URL = 'mongodb://localhost:27017';\r\nconst DATABASE_NAME = \"tweetdb\";\r\nvar database, collection;\r\n\r\nconst Twit = require('twit');\r\nvar client = new Twit({\r\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\r\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\r\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\r\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\r\n});\r\n\r\nvar stream = client.stream('statuses/filter', { track: 'facial recognition' })\r\nstream.on('tweet', function(tweet) {\r\n    console.log(tweet);\r\n\r\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, (error, client) => {\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        database = client.db(DATABASE_NAME);\r\n        collection = database.collection(\"tweets\");\r\n        console.log(\"Connected to database: \" + DATABASE_NAME);\r\n\r\n        var tweetObject = {\r\n            id: tweet.id,\r\n            name: tweet.user.name,\r\n            screenName: tweet.user.screen_name,\r\n            location: tweet.user.location,\r\n            profileImg: tweet.user.profile_image_url,\r\n            text: tweet.text,\r\n            createdAt: tweet.created_at,\r\n            reply: tweet.reply_count,\r\n            retweet: tweet.retweet_count\r\n        };\r\n\r\n        collection.insertOne(tweetObject, function(err, res) {\r\n            if (err) throw err;\r\n            console.log(\"Record inserted\");\r\n        });\r\n    });\r\n})\r\n\r\napp.get(\"/articles\", (req, res) => {\r\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, (error, client) => {\r\n        if (error) {\r\n            throw error;\r\n        }\r\n\r\n        database = client.db(DATABASE_NAME);\r\n        collection = database.collection(\"tweets\");\r\n        console.log(\"Connected to database: \" + DATABASE_NAME);\r\n\r\n        collection.find({}).toArray((error, result) => {\r\n            if (error) {\r\n                return res.status(500).send(error);\r\n            }\r\n            res.send(result);\r\n        });\r\n    });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1608134576446
  },
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FacialRecognition-master\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FacialRecognition-master\\\\my-blog-backend\",\"filename\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FacialRecognition-master\\\\my-blog-backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FacialRecognition-master\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend",
      "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = require('express')();\n\nvar cors = require('cors');\n\napp.use(_bodyParser[\"default\"].json());\napp.use(cors());\n\nrequire('dotenv').config({\n  path: 'src/.env'\n});\n\napp.listen(8000, function () {\n  console.log(\"Listening on port 8000\");\n});\nvar CONNECTION_URL = 'mongodb://localhost:27017';\nvar DATABASE_NAME = 'tweetdb';\nvar database, collection;\n\nvar Twit = require('twit');\n\nvar client = new Twit({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n}); //Streaming Tweets\n\nvar stream = client.stream('statuses/filter', {\n  track: 'facial recognition',\n  language: 'en'\n});\nstream.on('tweet', function (tweet) {\n  console.log(tweet); //Storing tweets in db\n\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db(DATABASE_NAME);\n    collection = database.collection('tweets');\n    console.log(\"Connected to database: \" + DATABASE_NAME);\n    var tweetObject = {\n      id: tweet.id,\n      name: tweet.user.name,\n      screenName: tweet.user.screen_name,\n      location: tweet.user.location,\n      profileImg: tweet.user.profile_image_url,\n      text: tweet.text,\n      createdAt: tweet.created_at,\n      reply: tweet.reply_count,\n      retweet: tweet.retweet_count\n    };\n    collection.insertOne(tweetObject, function (err, res) {\n      if (err) throw err;\n      console.log(\"Record inserted\");\n    });\n  });\n}); //Retrieving tweets from db\n\napp.get(\"/tweets\", function (req, res) {\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db(DATABASE_NAME);\n    collection = database.collection('tweets');\n    console.log(\"Connected to database: \" + DATABASE_NAME);\n    collection.find({}).toArray(function (error, result) {\n      if (error) {\n        return res.status(500).send(error);\n      }\n\n      res.send(result);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwiY29ycyIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiY29uZmlnIiwicGF0aCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJDT05ORUNUSU9OX1VSTCIsIkRBVEFCQVNFX05BTUUiLCJkYXRhYmFzZSIsImNvbGxlY3Rpb24iLCJUd2l0IiwiY2xpZW50IiwiY29uc3VtZXJfa2V5IiwicHJvY2VzcyIsImVudiIsIlRXSVRURVJfQ09OU1VNRVJfS0VZIiwiY29uc3VtZXJfc2VjcmV0IiwiVFdJVFRFUl9DT05TVU1FUl9TRUNSRVQiLCJhY2Nlc3NfdG9rZW4iLCJUV0lUVEVSX0FDQ0VTU19UT0tFTl9LRVkiLCJhY2Nlc3NfdG9rZW5fc2VjcmV0IiwiVFdJVFRFUl9BQ0NFU1NfVE9LRU5fU0VDUkVUIiwic3RyZWFtIiwidHJhY2siLCJsYW5ndWFnZSIsIm9uIiwidHdlZXQiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJlcnJvciIsImRiIiwidHdlZXRPYmplY3QiLCJpZCIsIm5hbWUiLCJ1c2VyIiwic2NyZWVuTmFtZSIsInNjcmVlbl9uYW1lIiwibG9jYXRpb24iLCJwcm9maWxlSW1nIiwicHJvZmlsZV9pbWFnZV91cmwiLCJ0ZXh0IiwiY3JlYXRlZEF0IiwiY3JlYXRlZF9hdCIsInJlcGx5IiwicmVwbHlfY291bnQiLCJyZXR3ZWV0IiwicmV0d2VldF9jb3VudCIsImluc2VydE9uZSIsImVyciIsInJlcyIsImdldCIsInJlcSIsImZpbmQiLCJ0b0FycmF5IiwicmVzdWx0Iiwic3RhdHVzIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxFQUFaOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0FELEdBQUcsQ0FBQ0csR0FB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QUN3RCxHQUFKLENBQVEsU0FBUixFQUFtQixVQUFDQyxHQUFELEVBQU1GLEdBQU4sRUFBYztBQUM3QnZCLHVCQUFZQyxPQUFaLENBQW9CdEIsY0FBcEIsRUFBb0M7QUFBRXVCLElBQUFBLGVBQWUsRUFBRTtBQUFuQixHQUFwQyxFQUErRCxVQUFDQyxLQUFELEVBQVFuQixNQUFSLEVBQW1CO0FBQzlFLFFBQUltQixLQUFKLEVBQVc7QUFDUCxZQUFNQSxLQUFOO0FBQ0g7O0FBRUR0QixJQUFBQSxRQUFRLEdBQUdHLE1BQU0sQ0FBQ29CLEVBQVAsQ0FBVXhCLGFBQVYsQ0FBWDtBQUNBRSxJQUFBQSxVQUFVLEdBQUdELFFBQVEsQ0FBQ0MsVUFBVCxDQUFvQixRQUFwQixDQUFiO0FBQ0FMLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUE0QkUsYUFBeEM7QUFDQUUsSUFBQUEsVUFBVSxDQUFDNEMsSUFBWCxDQUFnQixFQUFoQixFQUFvQkMsT0FBcEIsQ0FBNEIsVUFBQ3hCLEtBQUQsRUFBUXlCLE1BQVIsRUFBbUI7QUFDM0MsVUFBSXpCLEtBQUosRUFBVztBQUNQLGVBQU9vQixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjNCLEtBQXJCLENBQVA7QUFDSDs7QUFDRG9CLE1BQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixNQUFUO0FBQ0gsS0FMRDtBQU1ILEdBZEQ7QUFlSCxDQWhCRCIsInNvdXJjZVJvb3QiOiJFOlxcU29mdHdhcmUgRGV2ZWxvcG1lbnRcXFNEIDc0NC0wMSBUb3BpY3MgaW4gRGF0YSBUZWNobm9sb2dpZXNcXEZhY2lhbFJlY29nbml0aW9uLW1hc3RlclxcbXktYmxvZy1iYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSAnbW9uZ29kYic7XG5cbmNvbnN0IGFwcCA9IHJlcXVpcmUoJ2V4cHJlc3MnKSgpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShjb3JzKCkpO1xucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKHsgcGF0aDogJ3NyYy8uZW52JyB9KTtcblxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYExpc3RlbmluZyBvbiBwb3J0IDgwMDBgKVxufSk7XG5cbmNvbnN0IENPTk5FQ1RJT05fVVJMID0gJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnO1xuY29uc3QgREFUQUJBU0VfTkFNRSA9ICd0d2VldGRiJztcbnZhciBkYXRhYmFzZSwgY29sbGVjdGlvbjtcblxuY29uc3QgVHdpdCA9IHJlcXVpcmUoJ3R3aXQnKTtcbnZhciBjbGllbnQgPSBuZXcgVHdpdCh7XG4gICAgY29uc3VtZXJfa2V5OiBwcm9jZXNzLmVudi5UV0lUVEVSX0NPTlNVTUVSX0tFWSxcbiAgICBjb25zdW1lcl9zZWNyZXQ6IHByb2Nlc3MuZW52LlRXSVRURVJfQ09OU1VNRVJfU0VDUkVULFxuICAgIGFjY2Vzc190b2tlbjogcHJvY2Vzcy5lbnYuVFdJVFRFUl9BQ0NFU1NfVE9LRU5fS0VZLFxuICAgIGFjY2Vzc190b2tlbl9zZWNyZXQ6IHByb2Nlc3MuZW52LlRXSVRURVJfQUNDRVNTX1RPS0VOX1NFQ1JFVFxufSk7XG5cbi8vU3RyZWFtaW5nIFR3ZWV0c1xudmFyIHN0cmVhbSA9IGNsaWVudC5zdHJlYW0oJ3N0YXR1c2VzL2ZpbHRlcicsIHsgdHJhY2s6ICdmYWNpYWwgcmVjb2duaXRpb24nLCBsYW5ndWFnZTogJ2VuJyB9KVxuc3RyZWFtLm9uKCd0d2VldCcsIGZ1bmN0aW9uKHR3ZWV0KSB7XG4gICAgY29uc29sZS5sb2codHdlZXQpO1xuXG4gICAgLy9TdG9yaW5nIHR3ZWV0cyBpbiBkYlxuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QoQ09OTkVDVElPTl9VUkwsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0sIChlcnJvciwgY2xpZW50KSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgZGF0YWJhc2UgPSBjbGllbnQuZGIoREFUQUJBU0VfTkFNRSk7XG4gICAgICAgIGNvbGxlY3Rpb24gPSBkYXRhYmFzZS5jb2xsZWN0aW9uKCd0d2VldHMnKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gZGF0YWJhc2U6IFwiICsgREFUQUJBU0VfTkFNRSk7XG5cbiAgICAgICAgdmFyIHR3ZWV0T2JqZWN0ID0ge1xuICAgICAgICAgICAgaWQ6IHR3ZWV0LmlkLFxuICAgICAgICAgICAgbmFtZTogdHdlZXQudXNlci5uYW1lLFxuICAgICAgICAgICAgc2NyZWVuTmFtZTogdHdlZXQudXNlci5zY3JlZW5fbmFtZSxcbiAgICAgICAgICAgIGxvY2F0aW9uOiB0d2VldC51c2VyLmxvY2F0aW9uLFxuICAgICAgICAgICAgcHJvZmlsZUltZzogdHdlZXQudXNlci5wcm9maWxlX2ltYWdlX3VybCxcbiAgICAgICAgICAgIHRleHQ6IHR3ZWV0LnRleHQsXG4gICAgICAgICAgICBjcmVhdGVkQXQ6IHR3ZWV0LmNyZWF0ZWRfYXQsXG4gICAgICAgICAgICByZXBseTogdHdlZXQucmVwbHlfY291bnQsXG4gICAgICAgICAgICByZXR3ZWV0OiB0d2VldC5yZXR3ZWV0X2NvdW50XG4gICAgICAgIH07XG5cbiAgICAgICAgY29sbGVjdGlvbi5pbnNlcnRPbmUodHdlZXRPYmplY3QsIGZ1bmN0aW9uKGVyciwgcmVzKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlY29yZCBpbnNlcnRlZFwiKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KVxuXG4vL1JldHJpZXZpbmcgdHdlZXRzIGZyb20gZGJcbmFwcC5nZXQoXCIvdHdlZXRzXCIsIChyZXEsIHJlcykgPT4ge1xuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QoQ09OTkVDVElPTl9VUkwsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0sIChlcnJvciwgY2xpZW50KSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cblxuICAgICAgICBkYXRhYmFzZSA9IGNsaWVudC5kYihEQVRBQkFTRV9OQU1FKTtcbiAgICAgICAgY29sbGVjdGlvbiA9IGRhdGFiYXNlLmNvbGxlY3Rpb24oJ3R3ZWV0cycpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCB0byBkYXRhYmFzZTogXCIgKyBEQVRBQkFTRV9OQU1FKTtcbiAgICAgICAgY29sbGVjdGlvbi5maW5kKHt9KS50b0FycmF5KChlcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzLnNlbmQocmVzdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "cors",
        "use",
        "bodyParser",
        "json",
        "config",
        "path",
        "listen",
        "console",
        "log",
        "CONNECTION_URL",
        "DATABASE_NAME",
        "database",
        "collection",
        "Twit",
        "client",
        "consumer_key",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "consumer_secret",
        "TWITTER_CONSUMER_SECRET",
        "access_token",
        "TWITTER_ACCESS_TOKEN_KEY",
        "access_token_secret",
        "TWITTER_ACCESS_TOKEN_SECRET",
        "stream",
        "track",
        "language",
        "on",
        "tweet",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "error",
        "db",
        "tweetObject",
        "id",
        "name",
        "user",
        "screenName",
        "screen_name",
        "location",
        "profileImg",
        "profile_image_url",
        "text",
        "createdAt",
        "created_at",
        "reply",
        "reply_count",
        "retweet",
        "retweet_count",
        "insertOne",
        "err",
        "res",
        "get",
        "req",
        "find",
        "toArray",
        "result",
        "status",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FacialRecognition-master\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\n\nconst app = require('express')();\nconst cors = require('cors');\napp.use(bodyParser.json());\napp.use(cors());\nrequire('dotenv').config({ path: 'src/.env' });\n\napp.listen(8000, () => {\n    console.log(`Listening on port 8000`)\n});\n\nconst CONNECTION_URL = 'mongodb://localhost:27017';\nconst DATABASE_NAME = 'tweetdb';\nvar database, collection;\n\nconst Twit = require('twit');\nvar client = new Twit({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\n//Streaming Tweets\nvar stream = client.stream('statuses/filter', { track: 'facial recognition', language: 'en' })\nstream.on('tweet', function(tweet) {\n    console.log(tweet);\n\n    //Storing tweets in db\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n        database = client.db(DATABASE_NAME);\n        collection = database.collection('tweets');\n        console.log(\"Connected to database: \" + DATABASE_NAME);\n\n        var tweetObject = {\n            id: tweet.id,\n            name: tweet.user.name,\n            screenName: tweet.user.screen_name,\n            location: tweet.user.location,\n            profileImg: tweet.user.profile_image_url,\n            text: tweet.text,\n            createdAt: tweet.created_at,\n            reply: tweet.reply_count,\n            retweet: tweet.retweet_count\n        };\n\n        collection.insertOne(tweetObject, function(err, res) {\n            if (err) throw err;\n            console.log(\"Record inserted\");\n        });\n    });\n})\n\n//Retrieving tweets from db\napp.get(\"/tweets\", (req, res) => {\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n\n        database = client.db(DATABASE_NAME);\n        collection = database.collection('tweets');\n        console.log(\"Connected to database: \" + DATABASE_NAME);\n        collection.find({}).toArray((error, result) => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n            res.send(result);\n        });\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1609345502657
  },
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\my-blog-backend\",\"filename\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\my-blog-backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend",
      "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = require('express')();\n\nvar cors = require('cors');\n\napp.use(_bodyParser[\"default\"].json());\napp.use(cors());\n\nrequire('dotenv').config({\n  path: 'src/.env'\n});\n\napp.listen(8000, function () {\n  console.log(\"Listening on port 8000\");\n});\nvar CONNECTION_URL = 'mongodb://localhost:27017';\nvar database, collection;\n\nvar Twit = require('twit');\n\nvar client = new Twit({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\nvar stream = client.stream('statuses/filter', {\n  track: 'facial recognition',\n  language: 'en'\n});\nstream.on('tweet', function (tweet) {\n  console.log(tweet);\n\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, {\n    useUnifiedTopology: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db('tweetdb');\n    collection = database.collection('tweets');\n    collection.insertOne(tweet, function (err, res) {\n      if (err) throw err;\n      console.log(\"Record inserted\");\n    });\n  });\n});\napp.get('/tweets', function (req, res) {\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, {\n    useUnifiedTopology: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db('tweetdb');\n    collection = database.collection('tweets');\n    collection.find({}).sort({\n      _id: -1\n    }).limit(10).toArray(function (error, result) {\n      if (error) {\n        return res.status(500).send(error);\n      }\n\n      res.send(result);\n    });\n  });\n});\napp.get('/api/articles/:name', function (req, res) {\n  try {\n    var articleName = req.params.name;\n\n    _mongodb.MongoClient.connect(CONNECTION_URL, {\n      useNewUrlParser: true\n    }, {\n      useUnifiedTopology: true\n    });\n\n    var db = client.db('my-blog');\n    var articleInfo = db.collection('articles').findOne({\n      name: articleName\n    });\n    res.status(200).json(articleInfo);\n    client.close();\n  } catch (error) {\n    res.status(500).json({\n      message: 'Error connection to db',\n      error: error\n    });\n  }\n});\napp.post('api/articles/:name/add-comment', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, username, text, articleName, _client, db, articleInfo, updatedArticleInfo;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, username = _req$body.username, text = _req$body.text;\n            articleName = req.params.name;\n            _context.next = 5;\n            return _mongodb.MongoClient.connect(CONNECTION_URL, {\n              useNewUrlParser: true\n            }, {\n              useUnifiedTopology: true\n            });\n\n          case 5:\n            _client = _context.sent;\n            db = _client.db('my-blog');\n            _context.next = 9;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 9:\n            articleInfo = _context.sent;\n            _context.next = 12;\n            return db.collection('articles').updateOne({\n              name: articleName\n            }, {\n              '$set': {\n                comments: articleInfo.comments.concat({\n                  username: username,\n                  text: text\n                })\n              }\n            });\n\n          case 12:\n            _context.next = 14;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 14:\n            updatedArticleInfo = _context.sent;\n            res.status(200).json(updatedArticleInfo);\n\n            _client.close();\n\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connection to db',\n              error: _context.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "cors",
        "use",
        "bodyParser",
        "json",
        "config",
        "path",
        "listen",
        "console",
        "log",
        "CONNECTION_URL",
        "database",
        "collection",
        "Twit",
        "client",
        "consumer_key",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "consumer_secret",
        "TWITTER_CONSUMER_SECRET",
        "access_token",
        "TWITTER_ACCESS_TOKEN_KEY",
        "access_token_secret",
        "TWITTER_ACCESS_TOKEN_SECRET",
        "stream",
        "track",
        "language",
        "on",
        "tweet",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "error",
        "db",
        "insertOne",
        "err",
        "res",
        "get",
        "req",
        "find",
        "sort",
        "_id",
        "limit",
        "toArray",
        "result",
        "status",
        "send",
        "articleName",
        "params",
        "name",
        "articleInfo",
        "findOne",
        "close",
        "message",
        "post",
        "body",
        "username",
        "text",
        "updateOne",
        "comments",
        "concat",
        "updatedArticleInfo"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\n\nconst app = require('express')();\nconst cors = require('cors');\napp.use(bodyParser.json());\napp.use(cors());\nrequire('dotenv').config({ path: 'src/.env' });\n\napp.listen(8000, () => {\n    console.log(`Listening on port 8000`)\n});\n\nconst CONNECTION_URL = 'mongodb://localhost:27017';\nvar database, collection;\n\nconst Twit = require('twit');\nvar client = new Twit({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\nvar stream = client.stream('statuses/filter', { track: 'facial recognition', language: 'en' });\nstream.on('tweet', function(tweet) {\n    console.log(tweet);\n\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n        database = client.db('tweetdb');\n        collection = database.collection('tweets');\n\n        collection.insertOne(tweet, function(err, res) {\n            if (err) throw err;\n            console.log(\"Record inserted\");\n        });\n    });\n})\n\napp.get('/tweets', (req, res) => {\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n\n        database = client.db('tweetdb');\n        collection = database.collection('tweets');\n        collection.find({}).sort({ _id: -1 }).limit(10).toArray((error, result) => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n            res.send(result);\n        });\n    });\n\n});\n\napp.get('/api/articles/:name', (req, res) => {\n    try {\n        const articleName = req.params.name;\n\n        MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n\n        const articleInfo = db.collection('articles').findOne({ name: articleName });\n\n        res.status(200).json(articleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n});\n\napp.post('api/articles/:name/add-comment', async(req, res) => {\n    try {\n        const { username, text } = req.body;\n        const articleName = req.params.name;\n\n        const client = await MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\n        await db.collection('articles').updateOne({ name: articleName }, {\n            '$set': {\n                comments: articleInfo.comments.concat({ username, text })\n            },\n        });\n\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });\n        res.status(200).json(updatedArticleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1614732148702
  },
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\MY-BLOG-BACKEND\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\MY-BLOG-BACKEND\",\"filename\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\MY-BLOG-BACKEND\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\FaceValue\\\\MY-BLOG-BACKEND\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND",
      "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar needle = require('needle');\n\nvar config = require('dotenv').config();\n\nvar TOKEN = process.env.TWITTER_BEARER_TOKEN;\nconsole.log(TOKEN);\nvar rulesURL = 'https://api.twitter.com/2/tweets/search/stream/rules';\nvar streamURL = 'https://api.twitter.com/2/tweets/search/stream?tweet.fields=public_metrics&expansions=author_id';\nvar rules = [{\n  value: 'giveaway'\n}]; //Get stream rules\n\nfunction getRules() {\n  return _getRules.apply(this, arguments);\n}\n\nfunction _getRules() {\n  _getRules = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return needle('get', rulesURL, {\n              headers: {\n                Authorization: \"Bearer \".concat(TOKEN)\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.body);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getRules.apply(this, arguments);\n}\n\n; //Set stream rules\n\nfunction setRules() {\n  return _setRules.apply(this, arguments);\n}\n\nfunction _setRules() {\n  _setRules = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var ids, data, response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (Array.isArray(rules.data)) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", null);\n\n          case 2:\n            ids = rules.data.map(function (rule) {\n              return rule.id;\n            });\n            data = {\n              \"delete\": {\n                ids: ids\n              }\n            };\n            _context3.next = 6;\n            return needle('post', rulesURL, data, {\n              headers: {\n                'content-type': 'application/json',\n                Authorization: \"Bearer \".concat(TOKEN)\n              }\n            });\n\n          case 6:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.body);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _setRules.apply(this, arguments);\n}\n\n; //Delete stream rules\n\nfunction deleteRules(_x) {\n  return _deleteRules.apply(this, arguments);\n}\n\nfunction _deleteRules() {\n  _deleteRules = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(rules) {\n    var data, response;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            data = {\n              add: rules\n            };\n            _context4.next = 3;\n            return needle('post', rulesURL, data, {\n              headers: {\n                'content-type': 'application/json',\n                Authorization: \"Bearer token \".concat(TOKEN)\n              }\n            });\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response.body);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _deleteRules.apply(this, arguments);\n}\n\n;\n\nfunction streamTweets() {\n  var stream = needle.get(streamURL, {\n    headers: {\n      Authorization: \"Bearer token \".concat(TOKEN)\n    }\n  });\n  stream.on('data', function (data) {\n    try {\n      var json = JSON.parse(data);\n      console.log(json);\n    } catch (error) {}\n  });\n}\n\n;\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var currentRules;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return getRules();\n\n        case 3:\n          currentRules = _context.sent;\n          _context.next = 6;\n          return deleteRules(currentRules);\n\n        case 6:\n          _context.next = 8;\n          return setRules();\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          process.exit(1);\n\n        case 14:\n          streamTweets();\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 10]]);\n}))();\n/*\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\n\nconst app = require('express')();\nconst cors = require('cors');\napp.use(bodyParser.json());\napp.use(cors());\nrequire('dotenv').config({ path: 'src/.env' });\n\napp.listen(8000, () => {\n    console.log(`Listening on port 8000`)\n});\n\n\nconst CONNECTION_URL = 'mongodb://localhost:27017';\nconst DATABASE_NAME = 'tweetdb';\nvar database, collection;\n\nconst Twit = require('twit');\nvar client = new Twit({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\n//Streaming Tweets\nvar stream = client.stream('statuses/filter', { track: 'facial recognition', language: 'en' })\nstream.on('tweet', function(tweet) {\n    console.log(tweet);\n\n    //Storing tweets in db\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n        database = client.db(DATABASE_NAME);\n        collection = database.collection('tweets');\n        console.log(\"Connected to database: \" + DATABASE_NAME);\n\n        var tweetObject = {\n            id: tweet.id,\n            name: tweet.user.name,\n            screenName: tweet.user.screen_name,\n            location: tweet.user.location,\n            profileImg: tweet.user.profile_image_url,\n            text: tweet.text,\n            createdAt: tweet.created_at,\n            reply: tweet.reply_count,\n            retweet: tweet.retweet_count\n        };\n\n        collection.insertOne(tweetObject, function(err, res) {\n            if (err) throw err;\n            console.log(\"Record inserted\");\n        });\n    });\n})\n\n//Retrieving tweets from db\napp.get(\"/tweets\", (req, res) => {\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n\n        database = client.db(DATABASE_NAME);\n        collection = database.collection('tweets');\n        console.log(\"Connected to database: \" + DATABASE_NAME);\n        collection.find({}).toArray((error, result) => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n            res.send(result);\n        });\n    });\n});\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "needle",
        "require",
        "config",
        "TOKEN",
        "process",
        "env",
        "TWITTER_BEARER_TOKEN",
        "console",
        "log",
        "rulesURL",
        "streamURL",
        "rules",
        "value",
        "getRules",
        "headers",
        "Authorization",
        "response",
        "body",
        "setRules",
        "Array",
        "isArray",
        "data",
        "ids",
        "map",
        "rule",
        "id",
        "deleteRules",
        "add",
        "streamTweets",
        "stream",
        "get",
        "on",
        "json",
        "JSON",
        "parse",
        "error",
        "currentRules",
        "exit"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\FaceValue\\MY-BLOG-BACKEND\\src\\",
      "sourcesContent": [
        "const needle = require('needle');\nconst config = require('dotenv').config();\nconst TOKEN = process.env.TWITTER_BEARER_TOKEN;\n\nconsole.log(TOKEN);\n\nconst rulesURL = 'https://api.twitter.com/2/tweets/search/stream/rules';\nconst streamURL = 'https://api.twitter.com/2/tweets/search/stream?tweet.fields=public_metrics&expansions=author_id';\n\nconst rules = [{ value: 'giveaway' }];\n\n//Get stream rules\nasync function getRules() {\n    const response = await needle('get', rulesURL, {\n        headers: {\n            Authorization: `Bearer ${TOKEN}`\n        }\n    });\n    return response.body;\n};\n\n//Set stream rules\nasync function setRules() {\n    if (!Array.isArray(rules.data)) {\n        return null;\n    }\n    const ids = rules.data.map((rule) => rule.id);\n    const data = {\n        delete: {\n            ids: ids\n        }\n    };\n    const response = await needle('post', rulesURL, data, {\n        headers: {\n            'content-type': 'application/json',\n            Authorization: `Bearer ${TOKEN}`\n        }\n    });\n    return response.body;\n};\n\n//Delete stream rules\nasync function deleteRules(rules) {\n    const data = {\n        add: rules\n    };\n    const response = await needle('post', rulesURL, data, {\n        headers: {\n            'content-type': 'application/json',\n            Authorization: `Bearer token ${TOKEN}`\n        }\n    });\n    return response.body;\n};\n\nfunction streamTweets() {\n    const stream = needle.get(streamURL, {\n        headers: {\n            Authorization: `Bearer token ${TOKEN}`\n\n        }\n    });\n    stream.on('data', (data) => {\n        try {\n            const json = JSON.parse(data);\n            console.log(json);\n        } catch (error) {}\n    });\n};\n\n(async() => {\n    let currentRules;\n    try {\n        //Get all stream rules\n        currentRules = await getRules();\n        //Delete all stream rules\n        await deleteRules(currentRules);\n        //Set rules based on array above\n        await setRules();\n    } catch (error) {\n        console.error(error);\n        process.exit(1);\n    }\n    streamTweets();\n})();\n\n/*\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\n\nconst app = require('express')();\nconst cors = require('cors');\napp.use(bodyParser.json());\napp.use(cors());\nrequire('dotenv').config({ path: 'src/.env' });\n\napp.listen(8000, () => {\n    console.log(`Listening on port 8000`)\n});\n\n\nconst CONNECTION_URL = 'mongodb://localhost:27017';\nconst DATABASE_NAME = 'tweetdb';\nvar database, collection;\n\nconst Twit = require('twit');\nvar client = new Twit({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\n//Streaming Tweets\nvar stream = client.stream('statuses/filter', { track: 'facial recognition', language: 'en' })\nstream.on('tweet', function(tweet) {\n    console.log(tweet);\n\n    //Storing tweets in db\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n        database = client.db(DATABASE_NAME);\n        collection = database.collection('tweets');\n        console.log(\"Connected to database: \" + DATABASE_NAME);\n\n        var tweetObject = {\n            id: tweet.id,\n            name: tweet.user.name,\n            screenName: tweet.user.screen_name,\n            location: tweet.user.location,\n            profileImg: tweet.user.profile_image_url,\n            text: tweet.text,\n            createdAt: tweet.created_at,\n            reply: tweet.reply_count,\n            retweet: tweet.retweet_count\n        };\n\n        collection.insertOne(tweetObject, function(err, res) {\n            if (err) throw err;\n            console.log(\"Record inserted\");\n        });\n    });\n})\n\n//Retrieving tweets from db\napp.get(\"/tweets\", (req, res) => {\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n\n        database = client.db(DATABASE_NAME);\n        collection = database.collection('tweets');\n        console.log(\"Connected to database: \" + DATABASE_NAME);\n        collection.find({}).toArray((error, result) => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n            res.send(result);\n        });\n    });\n});\n*/"
      ]
    },
    "sourceType": "script",
    "mtime": 1609947085738
  },
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\AboutFace\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\AboutFace\\\\my-blog-backend\",\"filename\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\AboutFace\\\\my-blog-backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\AboutFace\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend",
      "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = require('express')();\n\nvar cors = require('cors');\n\napp.use(_bodyParser[\"default\"].json());\napp.use(cors());\n\nrequire('dotenv').config({\n  path: 'src/.env'\n});\n\napp.listen(8000, function () {\n  console.log(\"Listening on port 8000\");\n});\nvar CONNECTION_URL = 'mongodb://localhost:27017';\nvar database, collection;\n\nvar Twit = require('twit');\n\nvar client = new Twit({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n}); //Streaming Tweets\n\nvar stream = client.stream('statuses/filter', {\n  track: 'facial recognition',\n  language: 'en'\n});\nstream.on('tweet', function (tweet) {\n  console.log(tweet); //Storing tweets in db\n\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, {\n    useUnifiedTopology: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db('tweetdb');\n    collection = database.collection('tweets');\n    collection.insertOne(tweet, function (err, res) {\n      if (err) throw err;\n      console.log(\"Record inserted\");\n    });\n  });\n}); //Retrieving tweets from db\n\napp.get('/tweets', function (req, res) {\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, {\n    useUnifiedTopology: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db('tweetdb');\n    collection = database.collection('tweets');\n    collection.find({}).toArray(function (error, result) {\n      if (error) {\n        return res.status(500).send(error);\n      }\n\n      res.send(result);\n    });\n  });\n});\napp.get('/api/articles/:name', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var articleName, _client, db, articleInfo;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            articleName = req.params.name;\n            _context.next = 4;\n            return _mongodb.MongoClient.connect(CONNECTION_URL, {\n              useNewUrlParser: true\n            }, {\n              useUnifiedTopology: true\n            });\n\n          case 4:\n            _client = _context.sent;\n            db = _client.db('my-blog');\n            _context.next = 8;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 8:\n            articleInfo = _context.sent;\n            res.status(200).json(articleInfo);\n\n            _client.close();\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connection to db',\n              error: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/upvote', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var articleName, _client2, db, articleInfo, updatedArticleInfo;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            articleName = req.params.name;\n            _context2.next = 4;\n            return _mongodb.MongoClient.connect(CONNECTION_URL, {\n              useNewUrlParser: true\n            }, {\n              useUnifiedTopology: true\n            });\n\n          case 4:\n            _client2 = _context2.sent;\n            db = _client2.db('my-blog');\n            _context2.next = 8;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 8:\n            articleInfo = _context2.sent;\n            _context2.next = 11;\n            return db.collection('articles').updateOne({\n              name: articleName\n            }, {\n              '$set': {\n                upvotes: articleInfo.upvotes + 1\n              }\n            });\n\n          case 11:\n            _context2.next = 13;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 13:\n            updatedArticleInfo = _context2.sent;\n            res.status(200).json(updatedArticleInfo);\n\n            _client2.close();\n\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connection to db',\n              error: _context2.t0\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 18]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('api/articles/:name/add-comment', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, username, text, articleName, _client3, db, articleInfo, updatedArticleInfo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body = req.body, username = _req$body.username, text = _req$body.text;\n            articleName = req.params.name;\n            _context3.next = 5;\n            return _mongodb.MongoClient.connect(CONNECTION_URL, {\n              useNewUrlParser: true\n            }, {\n              useUnifiedTopology: true\n            });\n\n          case 5:\n            _client3 = _context3.sent;\n            db = _client3.db('my-blog');\n            _context3.next = 9;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 9:\n            articleInfo = _context3.sent;\n            _context3.next = 12;\n            return db.collection('articles').updateOne({\n              name: articleName\n            }, {\n              '$set': {\n                comments: articleInfo.comments.concat({\n                  username: username,\n                  text: text\n                })\n              }\n            });\n\n          case 12:\n            _context3.next = 14;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 14:\n            updatedArticleInfo = _context3.sent;\n            res.status(200).json(updatedArticleInfo);\n\n            _client3.close();\n\n            _context3.next = 22;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connection to db',\n              error: _context3.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 19]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "cors",
        "use",
        "bodyParser",
        "json",
        "config",
        "path",
        "listen",
        "console",
        "log",
        "CONNECTION_URL",
        "database",
        "collection",
        "Twit",
        "client",
        "consumer_key",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "consumer_secret",
        "TWITTER_CONSUMER_SECRET",
        "access_token",
        "TWITTER_ACCESS_TOKEN_KEY",
        "access_token_secret",
        "TWITTER_ACCESS_TOKEN_SECRET",
        "stream",
        "track",
        "language",
        "on",
        "tweet",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "error",
        "db",
        "insertOne",
        "err",
        "res",
        "get",
        "req",
        "find",
        "toArray",
        "result",
        "status",
        "send",
        "articleName",
        "params",
        "name",
        "findOne",
        "articleInfo",
        "close",
        "message",
        "post",
        "updateOne",
        "upvotes",
        "updatedArticleInfo",
        "body",
        "username",
        "text",
        "comments",
        "concat"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\SD 744-01 Topics in Data Technologies\\AboutFace\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\n\nconst app = require('express')();\nconst cors = require('cors');\napp.use(bodyParser.json());\napp.use(cors());\nrequire('dotenv').config({ path: 'src/.env' });\n\napp.listen(8000, () => {\n    console.log(`Listening on port 8000`)\n});\n\nconst CONNECTION_URL = 'mongodb://localhost:27017';\nvar database, collection;\n\nconst Twit = require('twit');\nvar client = new Twit({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\n//Streaming Tweets\nvar stream = client.stream('statuses/filter', { track: 'facial recognition', language: 'en' });\nstream.on('tweet', function(tweet) {\n    console.log(tweet);\n\n    //Storing tweets in db\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n        database = client.db('tweetdb');\n        collection = database.collection('tweets');\n\n        collection.insertOne(tweet, function(err, res) {\n            if (err) throw err;\n            console.log(\"Record inserted\");\n        });\n    });\n})\n\n//Retrieving tweets from db\napp.get('/tweets', (req, res) => {\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n\n        database = client.db('tweetdb');\n        collection = database.collection('tweets');\n        collection.find({}).toArray((error, result) => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n            res.send(result);\n        });\n    });\n});\n\napp.get('/api/articles/:name', async(req, res) => {\n    try {\n        const articleName = req.params.name;\n\n        const client = await MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\n\n        res.status(200).json(articleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n});\n\napp.post('/api/articles/:name/upvote', async(req, res) => {\n    try {\n        const articleName = req.params.name;\n\n        const client = await MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\n        await db.collection('articles').updateOne({ name: articleName }, {\n            '$set': {\n                upvotes: articleInfo.upvotes + 1\n            },\n        });\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });\n        res.status(200).json(updatedArticleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n\n});\n\napp.post('api/articles/:name/add-comment', async(req, res) => {\n    try {\n        const { username, text } = req.body;\n        const articleName = req.params.name;\n\n        const client = await MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\n        await db.collection('articles').updateOne({ name: articleName }, {\n            '$set': {\n                comments: articleInfo.comments.concat({ username, text })\n            },\n        });\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });\n        res.status(200).json(updatedArticleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1612563162679
  },
  "{\"sourceRoot\":\"E:\\\\Software Development\\\\GitHub Portfolio\\\\FaceValue\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Software Development\\\\GitHub Portfolio\\\\FaceValue\\\\my-blog-backend\",\"filename\":\"E:\\\\Software Development\\\\GitHub Portfolio\\\\FaceValue\\\\my-blog-backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Software Development\\\\GitHub Portfolio\\\\FaceValue\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend",
      "filename": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = require('express')();\n\nvar cors = require('cors');\n\napp.use(_bodyParser[\"default\"].json());\napp.use(cors());\n\nrequire('dotenv').config({\n  path: 'src/.env'\n});\n\napp.listen(8000, function () {\n  console.log(\"Listening on port 8000\");\n});\nvar CONNECTION_URL = 'mongodb://localhost:27017';\nvar database, collection;\n\nvar Twit = require('twit');\n\nvar client = new Twit({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\nvar stream = client.stream('statuses/filter', {\n  track: 'facial recognition',\n  language: 'en'\n});\nstream.on('tweet', function (tweet) {\n  console.log(tweet);\n\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, {\n    useUnifiedTopology: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db('tweetdb');\n    collection = database.collection('tweets');\n    collection.insertOne(tweet, function (err, res) {\n      if (err) throw err;\n      console.log(\"Record inserted\");\n    });\n  });\n});\napp.get('/tweets', function (req, res) {\n  _mongodb.MongoClient.connect(CONNECTION_URL, {\n    useNewUrlParser: true\n  }, {\n    useUnifiedTopology: true\n  }, function (error, client) {\n    if (error) {\n      throw error;\n    }\n\n    database = client.db('tweetdb');\n    collection = database.collection('tweets');\n    collection.find({}).sort({\n      _id: -1\n    }).limit(10).toArray(function (error, result) {\n      if (error) {\n        return res.status(500).send(error);\n      }\n\n      res.send(result);\n    });\n  });\n});\napp.get('/api/articles/:name', function (req, res) {\n  try {\n    var articleName = req.params.name;\n\n    _mongodb.MongoClient.connect(CONNECTION_URL, {\n      useNewUrlParser: true\n    }, {\n      useUnifiedTopology: true\n    });\n\n    var db = client.db('my-blog');\n    var articleInfo = db.collection('articles').findOne({\n      name: articleName\n    });\n    res.status(200).json(articleInfo);\n    client.close();\n  } catch (error) {\n    res.status(500).json({\n      message: 'Error connection to db',\n      error: error\n    });\n  }\n});\napp.post('api/articles/:name/add-comment', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, username, text, articleName, _client, db, articleInfo, updatedArticleInfo;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, username = _req$body.username, text = _req$body.text;\n            articleName = req.params.name;\n            _context.next = 5;\n            return _mongodb.MongoClient.connect(CONNECTION_URL, {\n              useNewUrlParser: true\n            }, {\n              useUnifiedTopology: true\n            });\n\n          case 5:\n            _client = _context.sent;\n            db = _client.db('my-blog');\n            _context.next = 9;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 9:\n            articleInfo = _context.sent;\n            _context.next = 12;\n            return db.collection('articles').updateOne({\n              name: articleName\n            }, {\n              '$set': {\n                comments: articleInfo.comments.concat({\n                  username: username,\n                  text: text\n                })\n              }\n            });\n\n          case 12:\n            _context.next = 14;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 14:\n            updatedArticleInfo = _context.sent;\n            res.status(200).json(updatedArticleInfo);\n\n            _client.close();\n\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connection to db',\n              error: _context.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "cors",
        "use",
        "bodyParser",
        "json",
        "config",
        "path",
        "listen",
        "console",
        "log",
        "CONNECTION_URL",
        "database",
        "collection",
        "Twit",
        "client",
        "consumer_key",
        "process",
        "env",
        "TWITTER_CONSUMER_KEY",
        "consumer_secret",
        "TWITTER_CONSUMER_SECRET",
        "access_token",
        "TWITTER_ACCESS_TOKEN_KEY",
        "access_token_secret",
        "TWITTER_ACCESS_TOKEN_SECRET",
        "stream",
        "track",
        "language",
        "on",
        "tweet",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "error",
        "db",
        "insertOne",
        "err",
        "res",
        "get",
        "req",
        "find",
        "sort",
        "_id",
        "limit",
        "toArray",
        "result",
        "status",
        "send",
        "articleName",
        "params",
        "name",
        "articleInfo",
        "findOne",
        "close",
        "message",
        "post",
        "body",
        "username",
        "text",
        "updateOne",
        "comments",
        "concat",
        "updatedArticleInfo"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\Software Development\\GitHub Portfolio\\FaceValue\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\n\nconst app = require('express')();\nconst cors = require('cors');\napp.use(bodyParser.json());\napp.use(cors());\nrequire('dotenv').config({ path: 'src/.env' });\n\napp.listen(8000, () => {\n    console.log(`Listening on port 8000`)\n});\n\nconst CONNECTION_URL = 'mongodb://localhost:27017';\nvar database, collection;\n\nconst Twit = require('twit');\nvar client = new Twit({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\nvar stream = client.stream('statuses/filter', { track: 'facial recognition', language: 'en' });\nstream.on('tweet', function(tweet) {\n    console.log(tweet);\n\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n        database = client.db('tweetdb');\n        collection = database.collection('tweets');\n\n        collection.insertOne(tweet, function(err, res) {\n            if (err) throw err;\n            console.log(\"Record inserted\");\n        });\n    });\n})\n\napp.get('/tweets', (req, res) => {\n    MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true }, (error, client) => {\n        if (error) {\n            throw error;\n        }\n\n        database = client.db('tweetdb');\n        collection = database.collection('tweets');\n        collection.find({}).sort({ _id: -1 }).limit(10).toArray((error, result) => {\n            if (error) {\n                return res.status(500).send(error);\n            }\n            res.send(result);\n        });\n    });\n\n});\n\napp.get('/api/articles/:name', (req, res) => {\n    try {\n        const articleName = req.params.name;\n\n        MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n\n        const articleInfo = db.collection('articles').findOne({ name: articleName });\n\n        res.status(200).json(articleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n});\n\napp.post('api/articles/:name/add-comment', async(req, res) => {\n    try {\n        const { username, text } = req.body;\n        const articleName = req.params.name;\n\n        const client = await MongoClient.connect(CONNECTION_URL, { useNewUrlParser: true }, { useUnifiedTopology: true });\n        const db = client.db('my-blog');\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\n        await db.collection('articles').updateOne({ name: articleName }, {\n            '$set': {\n                comments: articleInfo.comments.concat({ username, text })\n            },\n        });\n\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });\n        res.status(200).json(updatedArticleInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({ message: 'Error connection to db', error });\n    }\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1614732148702
  }
}