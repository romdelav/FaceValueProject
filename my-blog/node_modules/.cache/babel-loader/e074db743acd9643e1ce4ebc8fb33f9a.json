{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Software Development\\\\SD 744-01 Topics in Data Technologies\\\\AboutFace\\\\my-blog\\\\src\\\\pages\\\\ArticlePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ArticleContent from '../components/ArticleContent';\nimport NotFoundPage from './NotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport article from '../components/ArticleContent';\n\nconst ArticlePage = ({\n  match\n}) => {\n  _s();\n\n  const name = match.params.name;\n  const article = ArticleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`https://localhost:8000/api/articles/${name}`);\n      const body = await result.json();\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UpvotesSection, {\n      articleName: name,\n      upvotes: articleInfo.upvotes,\n      setArticleInfo: setArticleInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: articleInfo.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlePage, \"8tF5LkykmJ5PY+c7CyMQ3jg45FI=\");\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["E:/Software Development/SD 744-01 Topics in Data Technologies/AboutFace/my-blog/src/pages/ArticlePage.jsx"],"names":["React","useState","useEffect","ArticleContent","NotFoundPage","CommentsList","UpvotesSection","article","ArticlePage","match","name","params","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","title","content","map","paragraph","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAE7B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAMH,OAAO,GAAGJ,cAAc,CAACS,IAAf,CAAoBL,OAAO,IAAIA,OAAO,CAACG,IAAR,KAAiBA,IAAhD,CAAhB;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAAEc,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,SAAS,GAAG,YAAW;AACzB,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,uCAAsCT,IAAK,EAA7C,CAA1B;AACA,YAAMU,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAP,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KAJD;;AAKAH,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACP,IAAD,CAPM,CAAT;AASA,MAAG,CAACH,OAAJ,EAAa,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACI;AAAA,4BACA;AAAA,gBAAKA,OAAO,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEZ,IAA7B;AAAmC,MAAA,OAAO,EAAEG,WAAW,CAACE,OAAxD;AAAiE,MAAA,cAAc,EAAED;AAAjF;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCP,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACjB;AAAA,gBAAcD;AAAd,OAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,YADH,CAHD,eAMA,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEb,WAAW,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAUH,CA5BD;;GAAMR,W;;KAAAA,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ArticleContent from '../components/ArticleContent';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport article from '../components/ArticleContent';\r\n\r\nconst ArticlePage = ({match}) => {\r\n\r\n    const name = match.params.name;\r\n    const article = ArticleContent.find(article => article.name === name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: []});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await fetch(`https://localhost:8000/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if(!article) return <NotFoundPage />\r\n\r\n    return (\r\n        <>\r\n        <h1>{article.title}</h1>\r\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n        {article.content.map((paragraph, key)  => (\r\n            <p key={key}>{paragraph}</p>\r\n        ))}\r\n        <CommentsList comments={articleInfo.comments} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}