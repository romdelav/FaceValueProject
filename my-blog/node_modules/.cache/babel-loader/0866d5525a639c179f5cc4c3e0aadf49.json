{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Software Development\\\\React\\\\my-blog\\\\src\\\\pages\\\\ArticlesListPage.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nclass ArticlesListPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/articles');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      tweetList: []\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      tweetList: res.express\n    })).catch(err => console.log(err));\n    console.log(this.state.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.tweetList[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n/*\r\nconst ArticlesListPage = () => {\r\n    const [tweetInfo, setTweetInfo] = useState({id:0, text:''});\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://201.209.104.33:/3000/articles`);\r\n            const body = await result.json();\r\n            setTweetInfo(body);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <>\r\n        <p>Tweets:</p> \r\n        <p>{tweetInfo.id}</p>\r\n        <p>{tweetInfo.text}</p>\r\n        </>\r\n    )\r\n}\r\n\r\n*/\n\n\nexport default ArticlesListPage;","map":{"version":3,"sources":["E:/Software Development/React/my-blog/src/pages/ArticlesListPage.jsx"],"names":["React","useState","useEffect","ArticlesListPage","Component","constructor","props","callApi","response","fetch","body","json","status","Error","message","state","tweetList","componentDidMount","then","res","setState","express","catch","err","console","log","data","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,OAdmB,GAcT,YAAW;AACjB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,WAAF,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AAEH,KArBkB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC;AADD,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,OAAL,GACCW,IADD,CACMC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAAEG,GAAG,CAACE;AAAhB,KAAd,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWW,IAAvB;AACH;;AAWDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACA;AAAA,kBAAI,KAAKZ,KAAL,CAAWC,SAAX,CAAqB,CAArB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAKH;;AA9B0C;AAmC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeb,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nclass ArticlesListPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tweetList:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callApi()\r\n        .then(res => this.setState({tweetList: res.express}))\r\n        .catch(err => console.log(err));\r\n        console.log(this.state.data);\r\n    }\r\n\r\n    callApi = async() => {\r\n        const response = await fetch ('/articles');\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n\r\n        return body;\r\n\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <p>{this.state.tweetList[0]}</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\nconst ArticlesListPage = () => {\r\n    const [tweetInfo, setTweetInfo] = useState({id:0, text:''});\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://201.209.104.33:/3000/articles`);\r\n            const body = await result.json();\r\n            setTweetInfo(body);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <>\r\n        <p>Tweets:</p> \r\n        <p>{tweetInfo.id}</p>\r\n        <p>{tweetInfo.text}</p>\r\n        </>\r\n    )\r\n}\r\n\r\n*/\r\nexport default ArticlesListPage;"]},"metadata":{},"sourceType":"module"}