{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\r\nimport ArticleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst ArticlePage = ({match}) => { \r\n    const name = match.params.name;\r\n    const article = ArticleContent.find(article => article.name === name);\r\n\r\n    \r\n \r\n    const [articleInfo, setArticleInfo] = useState({id:0, text:''});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await fetch(`https://api.twitter.com/2/tweets/search/recent?query=node.js`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n\r\n        setArticleInfo({ text: 'this is a tweet'});\r\n    }, [name]);\r\n    \r\n\r\n    if(!article) return <NotFoundPage />\r\n\r\n    const OtherArticles = ArticleContent.filter(article => article.name !== name);\r\n    \r\n    return(   \r\n    <>\r\n    <h1>{article.title}</h1>\r\n    {article.content.map((paragraph, key) => (\r\n    <p key={key}>{paragraph}</p>\r\n    ))}\r\n    <br/><br/><br/><br/>\r\n    <h3>Other Articles:</h3>\r\n    <ArticlesList articles ={OtherArticles} />\r\n    </> \r\n    );\r\n}\r\n\r\nexport default ArticlePage;\r\n*/","map":{"version":3,"sources":["E:/Software Development/React/my-blog/src/pages/ArticlePage.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport ArticleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst ArticlePage = ({match}) => { \r\n    const name = match.params.name;\r\n    const article = ArticleContent.find(article => article.name === name);\r\n\r\n    \r\n \r\n    const [articleInfo, setArticleInfo] = useState({id:0, text:''});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await fetch(`https://api.twitter.com/2/tweets/search/recent?query=node.js`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n\r\n        setArticleInfo({ text: 'this is a tweet'});\r\n    }, [name]);\r\n    \r\n\r\n    if(!article) return <NotFoundPage />\r\n\r\n    const OtherArticles = ArticleContent.filter(article => article.name !== name);\r\n    \r\n    return(   \r\n    <>\r\n    <h1>{article.title}</h1>\r\n    {article.content.map((paragraph, key) => (\r\n    <p key={key}>{paragraph}</p>\r\n    ))}\r\n    <br/><br/><br/><br/>\r\n    <h3>Other Articles:</h3>\r\n    <ArticlesList articles ={OtherArticles} />\r\n    </> \r\n    );\r\n}\r\n\r\nexport default ArticlePage;\r\n*/"]},"metadata":{},"sourceType":"module"}