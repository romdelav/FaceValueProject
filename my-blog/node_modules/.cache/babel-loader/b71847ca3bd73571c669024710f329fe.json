{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Software Development\\\\React\\\\my-blog\\\\src\\\\pages\\\\ArticlePage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ArticleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\n\nconst ArticlePage = ({\n  match\n}) => {\n  var _s = $RefreshSig$();\n\n  const name = match.params.name;\n  const article = ArticleContent.find(article => article.name === name);\n\n  function TweetInfo({\n    login\n  }) {\n    _s();\n\n    const [data, setData] = useState(null);\n    useEffect(() => {\n      fetch(`https://api.github.com/users/${login}`).then(res => res.json()).then(setData).catch(console.error);\n    }, []);\n\n    if (data) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.avatar_url,\n          width: 100,\n          alt: \"github avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  }\n  /*\r\n     const [articleInfo, setArticleInfo] = useState({id:0, text:''});\r\n  \n     useEffect(() => {\r\n         const fetchData = async() => {\r\n             const result = await fetch(`https://api.twitter.com/2/tweets/search/recent?query=node.js`);\r\n             const body = await result.json();\r\n             setArticleInfo(body);\r\n         }\r\n         fetchData();\r\n  \n         setArticleInfo({ text: 'this is a tweet'});\r\n     }, [name]);\r\n     */\n\n\n  _s(TweetInfo, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 25\n  }, this);\n  const OtherArticles = ArticleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Other Articles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ArticlesList, {\n      articles: OtherArticles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["E:/Software Development/React/my-blog/src/pages/ArticlePage.jsx"],"names":["React","useState","useEffect","ArticleContent","ArticlesList","NotFoundPage","ArticlePage","match","name","params","article","find","TweetInfo","login","data","setData","fetch","then","res","json","catch","console","error","avatar_url","OtherArticles","filter","title","content","map","paragraph","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC7B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGP,cAAc,CAACQ,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;;AAEA,WAASI,SAAT,CAAmB;AAACC,IAAAA;AAAD,GAAnB,EAA4B;AAAA;;AACxB,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACAC,IAAAA,SAAS,CAAC,MAAM;AACZc,MAAAA,KAAK,CAAE,gCAA+BH,KAAM,EAAvC,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMF,OAFN,EAGCK,KAHD,CAGOC,OAAO,CAACC,KAHf;AAIH,KALQ,EAKN,EALM,CAAT;;AAOA,QAAGR,IAAH,EAAS;AACL,0BACI;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACD;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAEC,IAAI,CAACS,UAAf;AAA2B,UAAA,KAAK,EAAE,GAAlC;AAAuC,UAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AACD,WAAO,IAAP;AACH;AAEJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AArCiC,KAIpBX,SAJoB;;AAuC7B,MAAG,CAACF,OAAJ,EAAa,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,QAAMc,aAAa,GAAGrB,cAAc,CAACsB,MAAf,CAAsBf,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAtB;AAEA,sBACA;AAAA,4BACA;AAAA,gBAAKE,OAAO,CAACgB;AAAb;AAAA;AAAA;AAAA;AAAA,YADA,EAEChB,OAAO,CAACiB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACrB;AAAA,gBAAcD;AAAd,OAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,YADC,CAFD,eAKA;AAAA;AAAA;AAAA;AAAA,YALA,eAKK;AAAA;AAAA;AAAA;AAAA,YALL,eAKU;AAAA;AAAA;AAAA;AAAA,YALV,eAKe;AAAA;AAAA;AAAA;AAAA,YALf,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAOA,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAGN;AAAzB;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADA;AAWH,CAtDD;;KAAMlB,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ArticleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\n\r\nconst ArticlePage = ({match}) => { \r\n    const name = match.params.name;\r\n    const article = ArticleContent.find(article => article.name === name);\r\n    \r\n    function TweetInfo({login}) {\r\n        const [data, setData] = useState(null);\r\n        useEffect(() => {\r\n            fetch(`https://api.github.com/users/${login}`)\r\n            .then(res => res.json())\r\n            .then(setData)\r\n            .catch(console.error);\r\n        }, []);\r\n    \r\n        if(data) {\r\n            return(\r\n                <div>\r\n                    <h1>{data.login}</h1>\r\n                    <img src={data.avatar_url} width={100} alt=\"github avatar\"/>\r\n                </div>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    \r\n /*\r\n    const [articleInfo, setArticleInfo] = useState({id:0, text:''});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await fetch(`https://api.twitter.com/2/tweets/search/recent?query=node.js`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n\r\n        setArticleInfo({ text: 'this is a tweet'});\r\n    }, [name]);\r\n    */\r\n\r\n    if(!article) return <NotFoundPage />\r\n\r\n    const OtherArticles = ArticleContent.filter(article => article.name !== name);\r\n    \r\n    return(   \r\n    <>\r\n    <h1>{article.title}</h1>\r\n    {article.content.map((paragraph, key) => (\r\n    <p key={key}>{paragraph}</p>\r\n    ))}\r\n    <br/><br/><br/><br/>\r\n    <h3>Other Articles:</h3>\r\n    <ArticlesList articles ={OtherArticles} />\r\n    </> \r\n    );\r\n}\r\n\r\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}