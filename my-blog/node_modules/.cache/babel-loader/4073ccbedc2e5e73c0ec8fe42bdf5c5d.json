{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Software Development\\\\React\\\\my-blog\\\\src\\\\components\\\\TweetTextList.jsx\";\nimport React from 'react';\n\nconst TweetTextList = ({\n  tweets\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"grid-container2\",\n  children: tweets.map((thistweet, key) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: thistweet.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thistweet.created_at.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [thistweet.reply_count.toString(), \" replies\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [thistweet.retweet_count.toString(), \" retweets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n\n_c = TweetTextList;\nexport default TweetTextList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetTextList\");","map":{"version":3,"sources":["E:/Software Development/React/my-blog/src/components/TweetTextList.jsx"],"names":["React","TweetTextList","tweets","map","thistweet","key","text","created_at","toString","reply_count","retweet_count"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBAClB;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA,YACKA,MAAM,CAACC,GAAP,CAAW,CAACC,SAAD,EAAYC,GAAZ,kBACZ;AAAA,2BACA;AAAA,8BACI;AAAA,kBAAID,SAAS,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIF,SAAS,CAACG,UAAV,CAAqBC,QAArB;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAIJ,SAAS,CAACK,WAAV,CAAsBD,QAAtB,EAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,mBAAIJ,SAAS,CAACM,aAAV,CAAwBF,QAAxB,EAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAUH,GAAV;AAAA;AAAA;AAAA;AAAA;AADA,mBADC;AADL;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMJ,a;AAeN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\n\r\nconst TweetTextList = ({tweets}) => (\r\n    <div className=\"grid-container2\">\r\n        {tweets.map((thistweet, key) => \r\n        <>\r\n        <div key={key}>\r\n            <p>{thistweet.text}</p>\r\n            <p>{thistweet.created_at.toString()}</p>\r\n            <p>{thistweet.reply_count.toString()} replies</p>\r\n            <p>{thistweet.retweet_count.toString()} retweets</p>\r\n        </div>\r\n        </>\r\n        )}\r\n    </div>\r\n)\r\n\r\nexport default TweetTextList;\r\n"]},"metadata":{},"sourceType":"module"}