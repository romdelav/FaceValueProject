{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Software Development\\\\React\\\\my-blog\\\\src\\\\pages\\\\ArticlesListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import TweetsList from '../components/TweetsList';\n\nconst ArticlesListPage = ({\n  tweets\n}) => {\n  _s();\n\n  const [tweetInfo, setTweetInfo] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`http://localhost:8000/articles`);\n      const body = await result.json();\n      setTweetInfo(body);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container2\",\n      children: tweets.map((tweet, key) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), tweets.user.map((users, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [users.name, \" \", users.screen_name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: users.profile_image_url,\n              alt: \"cannot display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: users.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}; //<TweetsList tweets={tweetInfo} />\n\n\n_s(ArticlesListPage, \"EwX1yo/Dj/YUAr9we6DBzQWiTNc=\");\n\n_c = ArticlesListPage;\nexport default ArticlesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlesListPage\");","map":{"version":3,"sources":["E:/Software Development/React/my-blog/src/pages/ArticlesListPage.jsx"],"names":["React","useState","useEffect","ArticlesListPage","tweets","tweetInfo","setTweetInfo","fetchData","result","fetch","body","json","map","tweet","key","text","user","users","name","screen_name","profile_image_url","location"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAEnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAAF,CAA1B;AACA,YAAMC,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ;AACH,KAJD;;AAKAH,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;AASA,sBAEK;AAAA,2BACL;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACCH,MAAM,CAACQ,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACR;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA,sBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ,WAA4BD,GAA5B;AAAA;AAAA;AAAA;AAAA,gBADA,EAICV,MAAM,CAACY,IAAP,CAAYJ,GAAZ,CAAgB,CAACK,KAAD,EAAQH,GAAR,kBACb;AAAA,kCACA;AAAA,uBAAKG,KAAK,CAACC,IAAX,OAAkBD,KAAK,CAACE,WAAxB,oBAAqC;AAAK,cAAA,GAAG,EAAEF,KAAK,CAACG,iBAAhB;AAAmC,cAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAIH,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,WAAUP,GAAV;AAAA;AAAA;AAAA;AAAA,gBADH,CAJD;AAAA,sBADH;AADD;AAAA;AAAA;AAAA;AAAA;AADK,mBAFL;AAqBH,CAlCD,C,CAmCA;;;GAnCMX,gB;;KAAAA,gB;AAoCN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n//import TweetsList from '../components/TweetsList';\r\n\r\nconst ArticlesListPage = ({tweets}) => {\r\n\r\n    const [tweetInfo, setTweetInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://localhost:8000/articles`);\r\n            const body = await result.json();\r\n            setTweetInfo(body);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n       \r\n         <>\r\n    <div className=\"grid-container2\">\r\n    {tweets.map((tweet, key) => (\r\n        <>\r\n        <div className=\"tweet\" key={key}>\r\n            <p>{tweet.text}</p>\r\n        </div> \r\n        {tweets.user.map((users, key) => (\r\n            <div key={key}> \r\n            <h4>{users.name} {users.screen_name} <img src={users.profile_image_url} alt=\"cannot display\" /></h4>\r\n            <p>{users.location}</p>\r\n            </div>\r\n        ))}\r\n        </>\r\n    ))}\r\n    </div>\r\n    </>\r\n       \r\n    );\r\n}\r\n//<TweetsList tweets={tweetInfo} />\r\nexport default ArticlesListPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}